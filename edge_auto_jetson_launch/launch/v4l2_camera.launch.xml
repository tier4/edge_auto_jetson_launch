<launch>
  <!-- image topic name to be published -->
  <arg name="image_topic" default="image_raw" />
  <!-- frame id to be published -->
  <arg name="camera_frame_id" default="camera_frame_id" />
  <!-- path to the yaml file that contains parameters for v4l2_camera node -->
  <arg name="v4l2_camera_param_path" default="$(find-pkg-share edge_auto_jetson_launch)/config/v4l2_camera.param.yaml" />
  <!-- url to the yaml file that contains cameras intrinsic paramters -->
  <arg name="camera_info_url" default="" />
  <!-- container naem that this ROS node to be loaded -->
  <arg name="container_name" default="" />
  <!-- flag to use ROS2 intra process -->
  <arg name="use_intra_process" default="True" />
  <!-- flag to use sensor data QoS -->
  <arg name="use_sensor_data_qos" default="True" />
  <!-- publish frame number per second. value <= 0 means no limitation on publish rate -->
  <arg name="publish_rate" default="-1.0" />

  <let name="empty_container_is_specified" value="$(eval 'not &quot;$(var container_name)&quot;')" />
  <!-- If container name is not specified,
       execute function as an individual node  -->
  <group if="$(var empty_container_is_specified)">
    <node pkg="v4l2_camera" exec="v4l2_camera_node" name="v4l2_camera">
      <remap from="image_raw" to="$(var image_topic)" />
      <remap from="image_raw/compressed" to="$(var image_topic)/compressed" />
      <remap from="image_raw/compressedDepth" to="$(var image_topic)/compressedDepth" />
      <remap from="image_raw/theora" to="$(var image_topic)/theora" />
      <param from="$(var v4l2_camera_param_path)" />
      <param name="camera_frame_id" value="$(var camera_frame_id)" />
      <param name="camera_info_url" value="$(var camera_info_url)" />
      <param name="use_sensor_data_qos" value="$(var use_sensor_data_qos)" />
      <param name="publish_rate" value="$(var publish_rate)" />
    </node>
  </group>

  <!-- If container name is specified,
       execute function as a composable node and load it into the container  -->
  <group unless="$(var empty_container_is_specified)">
    <load_composable_node target="$(var container_name)">
      <composable_node pkg="v4l2_camera" plugin="v4l2_camera::V4L2Camera" name="v4l2_camera">
        <remap from="image_raw" to="$(var image_topic)" />
        <remap from="image_raw/compressed" to="$(var image_topic)/compressed" />
        <remap from="image_raw/compressedDepth" to="$(var image_topic)/compressedDepth" />
        <remap from="image_raw/theora" to="$(var image_topic)/theora" />
        <param from="$(var v4l2_camera_param_path)" />
        <param name="camera_frame_id" value="$(var camera_frame_id)" />
        <param name="camera_info_url" value="$(var camera_info_url)" />
        <param name="use_sensor_data_qos" value="$(var use_sensor_data_qos)" />
        <param name="publish_rate" value="$(var publish_rate)" />
        <extra_arg name="use_intra_process_comms" value="$(var use_intra_process)" />
      </composable_node>
    </load_composable_node>
  </group>
</launch>
